<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DE" xml:space="preserve">
    <value>Deutchland</value>
  </data>
  <data name="EN" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Welcome in Inbid</value>
  </data>
  <data name="LoginWelcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="LogOn" xml:space="preserve">
    <value>Log on</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="PL" xml:space="preserve">
    <value>Polish</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome in Inbid</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change [%]</value>
  </data>
  <data name="CurrentPrice" xml:space="preserve">
    <value>Current price</value>
  </data>
  <data name="DataOffer" xml:space="preserve">
    <value>Data of Offer</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name of Bidder</value>
    <comment>tabela ofert</comment>
  </data>
  <data name="StartPrice" xml:space="preserve">
    <value>Start price</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Email is invalid</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>* First name</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>First Name is required</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>* Last Name</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Last Name is required</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PhoneInvalid" xml:space="preserve">
    <value>Phone is invalid</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>* User name</value>
  </data>
  <data name="UserNameRequired" xml:space="preserve">
    <value>User name is required</value>
    <comment>registration-validation</comment>
  </data>
  <data name="ComparePassword" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>* Confirm password</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>* Password</value>
  </data>
  <data name="PasswordLong" xml:space="preserve">
    <value>The password must be at least 6 characters long.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>The password is required</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="DataException" xml:space="preserve">
    <value>Unable to save changes. Try again, and if the problem persists, see your system administrator.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>* Language</value>
  </data>
  <data name="LanguageRequired" xml:space="preserve">
    <value>Language is required</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>PostalCode</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="Auction" xml:space="preserve">
    <value>Auction</value>
  </data>
  <data name="MMMdd" xml:space="preserve">
    <value>MMM dd</value>
  </data>
  <data name="MonthDayYear" xml:space="preserve">
    <value>MMMM d, yyyy</value>
  </data>
  <data name="RSVP" xml:space="preserve">
    <value>RSVP</value>
  </data>
  <data name="RSVPs" xml:space="preserve">
    <value>RSVPs</value>
  </data>
  <data name="with" xml:space="preserve">
    <value>with</value>
  </data>
  <data name="ampm" xml:space="preserve">
    <value>true</value>
    <comment>Timepicker.js</comment>
  </data>
  <data name="closeText" xml:space="preserve">
    <value>Done</value>
    <comment>Timepicker.js</comment>
  </data>
  <data name="currentText" xml:space="preserve">
    <value>Now</value>
    <comment>Timepicker.js</comment>
  </data>
  <data name="hourText" xml:space="preserve">
    <value>Hour</value>
    <comment>Timepicker.js</comment>
  </data>
  <data name="minuteText" xml:space="preserve">
    <value>Minute</value>
    <comment>Timepicker.js</comment>
  </data>
  <data name="secondText" xml:space="preserve">
    <value>Second</value>
    <comment>Timepicker.js</comment>
  </data>
  <data name="timeOnlyTitle" xml:space="preserve">
    <value>Choose Time</value>
    <comment>Timepicker.js</comment>
  </data>
  <data name="timeText" xml:space="preserve">
    <value>Time</value>
    <comment>Timepicker.js</comment>
  </data>
  <data name="Auctions" xml:space="preserve">
    <value>Auctions</value>
    <comment>Menu.cshtml</comment>
  </data>
  <data name="AuctionDoesntExist" xml:space="preserve">
    <value>Sorry - but the auction you requested doesn't exist or was deleted.</value>
    <comment>NotFound.cshtml</comment>
  </data>
  <data name="AuctionNotFound" xml:space="preserve">
    <value>Auction not found</value>
    <comment>AuctionController.cs</comment>
  </data>
  <data name="ErrorAccessingAuction" xml:space="preserve">
    <value>Error Accessing Auction</value>
    <comment>AuctionController.cs</comment>
  </data>
  <data name="LostQuestion" xml:space="preserve">
    <value>Auction isn't exist?</value>
    <comment>NotFound.cshtml</comment>
  </data>
  <data name="ModelDescription" xml:space="preserve">
    <value>Description</value>
    <comment>Auction.cs</comment>
  </data>
  <data name="ModelDescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
    <comment>Auction.cs</comment>
  </data>
  <data name="NoAuctionFound" xml:space="preserve">
    <value>No Auction found</value>
    <comment>AuctionController.cs</comment>
  </data>
  <data name="YouDoNotOwnThisAuction" xml:space="preserve">
    <value>You Don't Own This Auction</value>
    <comment>AuctionController.cs</comment>
  </data>
  <data name="PageNext" xml:space="preserve">
    <value>Next &gt;</value>
  </data>
  <data name="PageOf" xml:space="preserve">
    <value>Page {0} of {1}</value>
    <comment>0: index
1:total</comment>
  </data>
  <data name="PagePrev" xml:space="preserve">
    <value>&lt; Prev</value>
  </data>
  <data name="AuctionDeleted" xml:space="preserve">
    <value>Auction deleted</value>
  </data>
  <data name="AuctionDirection" xml:space="preserve">
    <value>Forward/Reverse</value>
  </data>
  <data name="ClickForUpcomingAuction" xml:space="preserve">
    <value>Click for Upcoming Auction</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
    <comment>delete.cshtml</comment>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Confirm delete</value>
    <comment>delete.cshtml</comment>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Deleted</value>
  </data>
  <data name="Forward" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PleaseConfirmCancelDinner" xml:space="preserve">
    <value>Please confirm you want to cancel the auction:</value>
    <comment>delete.cshtml</comment>
  </data>
  <data name="Reverse" xml:space="preserve">
    <value>Reverse</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YourAuctionDeleted" xml:space="preserve">
    <value>Your auction was successfully deleted.</value>
  </data>
  <data name="AuctionNumber" xml:space="preserve">
    <value>Auction Number</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EnableDisable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="EndTime" xml:space="preserve">
    <value>End Time</value>
  </data>
  <data name="MinJump" xml:space="preserve">
    <value>Bid Increments</value>
  </data>
  <data name="NameAuction" xml:space="preserve">
    <value>Auction Name</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="UserN" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="ViewTopOffer" xml:space="preserve">
    <value>Show best offer</value>
  </data>
  <data name="AuctionName" xml:space="preserve">
    <value>Nazwa Aukcji</value>
    <comment>Auction.cs</comment>
  </data>
  <data name="CurrentPriceChangeToSmall" xml:space="preserve">
    <value>Wartość oferty nie spełnia warunków aukcji</value>
    <comment>CurrentPriceValidation.cs</comment>
  </data>
  <data name="ErrorEndTimeGreaterStartTime" xml:space="preserve">
    <value>'{0}' must be greater than '{1}'</value>
    <comment>DateTimeValidation.cs</comment>
  </data>
  <data name="ErrorStartTimeGreaterNow" xml:space="preserve">
    <value>'{0}' musi byc wiekszy od obecnej godziny</value>
    <comment>DateTimeValidation.cs</comment>
  </data>
</root>